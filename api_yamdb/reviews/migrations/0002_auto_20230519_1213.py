# Generated by Django 3.2 on 2023-05-19 12:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import reviews.validators


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('reviews', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='category',
            name='slug',
            field=models.SlugField(help_text='Индетификатор категории', unique=True, verbose_name='Индетификатор'),
        ),
        migrations.AlterField(
            model_name='genre',
            name='slug',
            field=models.SlugField(help_text='Индетификатор жанра', unique=True, verbose_name='Индетификатор'),
        ),
        migrations.AlterField(
            model_name='title',
            name='category',
            field=models.ForeignKey(help_text='Категория, к которой относится произведение', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='titles', to='reviews.category', verbose_name='Категория'),
        ),
        migrations.AlterField(
            model_name='title',
            name='genre',
            field=models.ManyToManyField(help_text='Жанр, к которому относится произведение', related_name='titles', to='reviews.Genre', verbose_name='Жанр'),
        ),
        migrations.AlterField(
            model_name='title',
            name='year',
            field=models.IntegerField(help_text='Год выпуска произведения', validators=[reviews.validators.year_validate], verbose_name='Год выпуска'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Текст публикации', verbose_name='Текст')),
                ('pub_date', models.DateTimeField(auto_now_add=True, help_text='Дата устанавливается автоматически', verbose_name='Дата создания')),
                ('score', models.PositiveSmallIntegerField(help_text='Рейтинг произведения', validators=[reviews.validators.score_validate], verbose_name='Рейтинг')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Автор отзыва')),
                ('title', models.ForeignKey(help_text='Отзыв к выбранному произведению', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='reviews.title', verbose_name='Отзыв')),
            ],
            options={
                'verbose_name': 'Отзыв к произведению',
                'verbose_name_plural': 'Отзывы к произведениям',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Текст публикации', verbose_name='Текст')),
                ('pub_date', models.DateTimeField(auto_now_add=True, help_text='Дата устанавливается автоматически', verbose_name='Дата создания')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Автор комментария')),
                ('review', models.ForeignKey(help_text='Комментарий к отзыву', on_delete=django.db.models.deletion.CASCADE, to='reviews.review', verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Комментарий к отзыву',
                'verbose_name_plural': 'Комментарии к отзывам',
                'ordering': ('id',),
            },
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('title', 'author'), name='Unique_review_from_author_for_title'),
        ),
    ]
